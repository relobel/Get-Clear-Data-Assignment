titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("__","_",titles,fixed=TRUE)
titles = gsub("...","_",titles,fixed=TRUE)
titles = gsub(".","_",titles,fixed=TRUE)
titles = gsub("mean__","mean",titles,fixed=TRUE)
titles = gsub("std__","std",titles,fixed=TRUE)
titles = gsub("freq__","freq",titles,fixed=TRUE)
titles = gsub("freq_","freq",titles,fixed=TRUE)
titles = gsub("meanFreq","mean_freq",titles,fixed=TRUE)
length(titles)
substr(titles[80],75,81)
substr(titles[78],75,81)
titles[78]
substr(titles[78],70,75)
substr(titles[78],50,75)
substr(titles[78],1,5)
substr(titles[78],21,25)
substr(titles[78],25,30)
substr(titles[78],25,35)
library(dplyr)
setwd("D:/git_repo/Get-Clear-Data-Assignment")
#Step 0. Read Raw data into Tables
#read the colnames of the merged data frama (df)
titles <- tbl_df(read.table("features.txt", colClasses = c("character"), stringsAsFactors = FALSE ))
titles<- c("subject","activity",as.array(titles$V2))
#fix the invalid varaible names
titles = make.names(titles, unique = TRUE, allow_ = TRUE)
x_test<-tbl_df(read.table("X_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_test<-tbl_df(read.table("subject_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_test<-tbl_df(read.table("y_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_test = bind_cols(s_test, t_test, x_test)
colnames(x_test) = titles
x_train<-tbl_df(read.table("x_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_train<-tbl_df(read.table("subject_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_train<-tbl_df(read.table("y_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_train = bind_cols(s_train, t_train, x_train)
colnames(x_train) = titles
#Step 1: Merges the training and the test sets to create one data set.
print(paste("dim x_test/x_train: ",dim(x_test)[1],dim(x_test)[2], "/" ,dim(x_train)[1],dim(x_train)[2]))
# [1] "dim x_test/x_train:  2947 563 / 7352 563"
df = bind_rows(x_test,x_train)
print(paste("dim of the merged dataframe (df): ",dim(df)[1],dim(df)[2]))
# [1] "dim of the merged dataframe (df):  10299 563"
#Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.
#read the colnames of the merged data frama (df)
# df must contain only the cols with mean and std
titles = colnames(df)
cols_inic = df[,1:2]
df <- df[(grepl("mean",titles) | grepl("std",titles))]
df <- bind_cols(cols_inic, df)
print(paste("dim of the dataframe whith only means and stds: ",dim(df)[1], dim(df)[2]))
titles = colnames(df)
print(titles)
#Step 3: Uses descriptive activity names to name the activities in the data set
activities = c("WALK","WALK_UP","WALK_DOWN","SIT","STAND","LAYING")
df = mutate(df,active=activities[activity])
df = select(df,1,82,3:81)
colnames(df) = titles
# clear enviornment from variables not needed anymore
rm(s_test, s_train, t_test, t_train, x_test, x_train, cols_inic, activities)
#Step 4: Appropriately labels the data set with descriptive variable names.
titles = gsub("tBody","Time_Body_",titles,fixed=TRUE)
titles = gsub("fBody","Freq_Body_",titles,fixed=TRUE)
titles = gsub("gravity","Gravity",titles,fixed=TRUE)
titles = gsub("tGravity","Time_Gravity_",titles,fixed=TRUE)
titles = gsub("_Acc_","_Accel_",titles,titles, fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("__","_",titles,fixed=TRUE)
titles = gsub("...","_",titles,fixed=TRUE)
titles = gsub(".","_",titles,fixed=TRUE)
titles = gsub("mean__","mean",titles,fixed=TRUE)
titles = gsub("std__","std",titles,fixed=TRUE)
titles = gsub("meanFreq","mean_freq",titles,fixed=TRUE)
titles = gsub("freq__","freq",titles,fixed=TRUE)
print(titles)
View(df)
gr_act_subj <- group_by(df, activity, subject)
sum_act_subj <- summarise_each(gr_act_subj,"mean")
View(sum_act_subj)
sum_act_subj <- summarise(gr_act_subj,"mean")
View(sum_act_subj)
sum_act_subj <- summarise_all(gr_act_subj,"mean")
View(sum_act_subj)
sum_act_subj_each <- summarise_all(gr_act_subj,"mean")
View(sum_act_subj_each)
library(dplyr)
setwd("D:/git_repo/Get-Clear-Data-Assignment")
#Step 0. Read Raw data into Tables
#read the colnames of the merged data frama (df)
titles <- tbl_df(read.table("features.txt", colClasses = c("character"), stringsAsFactors = FALSE ))
titles<- c("subject","activity",as.array(titles$V2))
#fix the invalid varaible names
titles = make.names(titles, unique = TRUE, allow_ = TRUE)
x_test<-tbl_df(read.table("X_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_test<-tbl_df(read.table("subject_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_test<-tbl_df(read.table("y_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_test = bind_cols(s_test, t_test, x_test)
colnames(x_test) = titles
x_train<-tbl_df(read.table("x_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_train<-tbl_df(read.table("subject_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_train<-tbl_df(read.table("y_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_train = bind_cols(s_train, t_train, x_train)
colnames(x_train) = titles
#Step 1: Merges the training and the test sets to create one data set.
print(paste("dim x_test/x_train: ",dim(x_test)[1],dim(x_test)[2], "/" ,dim(x_train)[1],dim(x_train)[2]))
# [1] "dim x_test/x_train:  2947 563 / 7352 563"
df = bind_rows(x_test,x_train)
print(paste("dim of the merged dataframe (df): ",dim(df)[1],dim(df)[2]))
# [1] "dim of the merged dataframe (df):  10299 563"
#Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.
#read the colnames of the merged data frama (df)
# df must contain only the cols with mean and std
titles = colnames(df)
cols_inic = df[,1:2]
df <- df[(grepl("mean",titles) | grepl("std",titles))]
df <- bind_cols(cols_inic, df)
print(paste("dim of the dataframe whith only means and stds: ",dim(df)[1], dim(df)[2]))
titles = colnames(df)
print(titles)
#Step 3: Uses descriptive activity names to name the activities in the data set
activities = c("WALK","WALK_UP","WALK_DOWN","SIT","STAND","LAYING")
df = mutate(df,active=activities[activity])
df = select(df,1,82,3:81)
colnames(df) = titles
# clear enviornment from variables not needed anymore
rm(s_test, s_train, t_test, t_train, x_test, x_train, cols_inic, activities)
#Step 4: Appropriately labels the data set with descriptive variable names.
#replace with gsub the variable names with more descriptive names
titles = gsub("tBody","Time_Body_",titles,fixed=TRUE)
titles = gsub("fBody","Freq_Body_",titles,fixed=TRUE)
titles = gsub("gravity","Gravity",titles,fixed=TRUE)
titles = gsub("tGravity","Time_Gravity_",titles,fixed=TRUE)
titles = gsub("_Acc_","_Accel_",titles,titles, fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("__","_",titles,fixed=TRUE)
titles = gsub("...","_",titles,fixed=TRUE)
titles = gsub(".","_",titles,fixed=TRUE)
titles = gsub("mean__","mean",titles,fixed=TRUE)
titles = gsub("std__","std",titles,fixed=TRUE)
titles = gsub("meanFreq","mean_freq",titles,fixed=TRUE)
titles = gsub("freq__","freq",titles,fixed=TRUE)
print(titles)
#[1] "subject"                                "activity"                               "Time_Body_Acc_mean_X"
#[4] "Time_Body_Acc_mean_Y"                   "Time_Body_Acc_mean_Z"                   "Time_Body_Acc_std_X"
#[7] "Time_Body_Acc_std_Y"                    "Time_Body_Acc_std_Z"                    "Time_Gravity_Acc_mean_X"
#[10] "Time_Gravity_Acc_mean_Y"                "Time_Gravity_Acc_mean_Z"                "Time_Gravity_Acc_std_X"
#[13] "Time_Gravity_Acc_std_Y"                 "Time_Gravity_Acc_std_Z"                 "Time_Body_Acc_Jerk_mean_X"
#[16] "Time_Body_Acc_Jerk_mean_Y"              "Time_Body_Acc_Jerk_mean_Z"              "Time_Body_Acc_Jerk_std_X"
#[19] "Time_Body_Acc_Jerk_std_Y"               "Time_Body_Acc_Jerk_std_Z"               "Time_Body_Gyro_mean_X"
#[22] "Time_Body_Gyro_mean_Y"                  "Time_Body_Gyro_mean_Z"                  "Time_Body_Gyro_std_X"
#[25] "Time_Body_Gyro_std_Y"                   "Time_Body_Gyro_std_Z"                   "Time_Body_Gyro_Jerk_mean_X"
#[28] "Time_Body_Gyro_Jerk_mean_Y"             "Time_Body_Gyro_Jerk_mean_Z"             "Time_Body_Gyro_Jerk_std_X"
#[31] "Time_Body_Gyro_Jerk_std_Y"              "Time_Body_Gyro_Jerk_std_Z"              "Time_Body_Acc_Mag_mean"
#[34] "Time_Body_Acc_Mag_std"                  "Time_Gravity_Acc_Mag_mean"              "Time_Gravity_Acc_Mag_std"
#[37] "Time_Body_Acc_Jerk_Mag_mean"            "Time_Body_Acc_Jerk_Mag_std"             "Time_Body_Gyro_Mag_mean"
#[40] "Time_Body_Gyro_Mag_std"                 "Time_Body_Gyro_Jerk_Mag_mean"           "Time_Body_Gyro_Jerk_Mag_std"
#[43] "Freq_Body_Acc_mean_X"                   "Freq_Body_Acc_mean_Y"                   "Freq_Body_Acc_mean_Z"
#[46] "Freq_Body_Acc_std_X"                    "Freq_Body_Acc_std_Y"                    "Freq_Body_Acc_std_Z"
#[49] "Freq_Body_Acc_mean_freq_X"              "Freq_Body_Acc_mean_freq_Y"              "Freq_Body_Acc_mean_freq_Z"
#[52] "Freq_Body_Acc_Jerk_mean_X"              "Freq_Body_Acc_Jerk_mean_Y"              "Freq_Body_Acc_Jerk_mean_Z"
#[55] "Freq_Body_Acc_Jerk_std_X"               "Freq_Body_Acc_Jerk_std_Y"               "Freq_Body_Acc_Jerk_std_Z"
#[58] "Freq_Body_Acc_Jerk_mean_freq_X"         "Freq_Body_Acc_Jerk_mean_freq_Y"         "Freq_Body_Acc_Jerk_mean_freq_Z"
#[61] "Freq_Body_Gyro_mean_X"                  "Freq_Body_Gyro_mean_Y"                  "Freq_Body_Gyro_mean_Z"
#[64] "Freq_Body_Gyro_std_X"                   "Freq_Body_Gyro_std_Y"                   "Freq_Body_Gyro_std_Z"
#[67] "Freq_Body_Gyro_mean_freq_X"             "Freq_Body_Gyro_mean_freq_Y"             "Freq_Body_Gyro_mean_freq_Z"
#[70] "Freq_Body_Acc_Mag_mean"                 "Freq_Body_Acc_Mag_std"                  "Freq_Body_Acc_Mag_mean_freq"
#[73] "Freq_Body_Body_Acc_Jerk_Mag_mean"       "Freq_Body_Body_Acc_Jerk_Mag_std"        "Freq_Body_Body_Acc_Jerk_Mag_mean_freq"
#[76] "Freq_Body_Body_Gyro_Mag_mean"           "Freq_Body_Body_Gyro_Mag_std"            "Freq_Body_Body_Gyro_Mag_mean_freq"
#[79] "Freq_Body_Body_Gyro_Jerk_Mag_mean"      "Freq_Body_Body_Gyro_Jerk_Mag_std"       "Freq_Body_Body_Gyro_Jerk_Mag_mean_freq"
#Step 5: 5.From the data set in step 4, creates a second, independent tidy data set
#with the average of each variable for each activity and each subject.
gr_act_subj <- group_by(df, activity, subject)
sum_act_subj <- summarise_all(gr_act_subj,"mean")
View(sum_act_subj)
rm(gr_act_subj, titles)
#Step 5: 5.From the data set in step 4, creates a second, independent tidy data set
#with the average of each variable for each activity and each subject.
gr_act_subj <- group_by(df, activity, subject)
mean_act_subj <- summarise_all(gr_act_subj,"mean")
View(mean_act_subj)
# clear enviornment from variables not needed anymore
rm(gr_act_subj, titles)
#Step 5: 5.From the data set in step 4, creates a second, independent tidy data set
#with the average of each variable for each activity and each subject.
gr_act_subj <- group_by(df, activity, subject)
mean_act_subj <- summarise_all(gr_act_subj,"mean")
View(mean_act_subj)
# clear enviornment from variables not needed anymore
rm(gr_act_subj, titles)
library(dplyr)
setwd("D:/git_repo/Get-Clear-Data-Assignment")
#Step 0. Read Raw data into Tables
#read the colnames of the merged data frama (df)
titles <- tbl_df(read.table("features.txt", colClasses = c("character"), stringsAsFactors = FALSE ))
titles<- c("subject","activity",as.array(titles$V2))
#fix the invalid varaible names
titles = make.names(titles, unique = TRUE, allow_ = TRUE)
x_test<-tbl_df(read.table("X_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_test<-tbl_df(read.table("subject_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_test<-tbl_df(read.table("y_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_test = bind_cols(s_test, t_test, x_test)
colnames(x_test) = titles
x_train<-tbl_df(read.table("x_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_train<-tbl_df(read.table("subject_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_train<-tbl_df(read.table("y_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_train = bind_cols(s_train, t_train, x_train)
colnames(x_train) = titles
#Step 1: Merges the training and the test sets to create one data set.
print(paste("dim x_test/x_train: ",dim(x_test)[1],dim(x_test)[2], "/" ,dim(x_train)[1],dim(x_train)[2]))
# [1] "dim x_test/x_train:  2947 563 / 7352 563"
df = bind_rows(x_test,x_train)
print(paste("dim of the merged dataframe (df): ",dim(df)[1],dim(df)[2]))
# [1] "dim of the merged dataframe (df):  10299 563"
#Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.
#read the colnames of the merged data frama (df)
# df must contain only the cols with mean and std
titles = colnames(df)
cols_inic = df[,1:2]
df <- df[(grepl("mean",titles) | grepl("std",titles))]
df <- bind_cols(cols_inic, df)
print(paste("dim of the dataframe whith only means and stds: ",dim(df)[1], dim(df)[2]))
titles = colnames(df)
print(titles)
#Step 3: Uses descriptive activity names to name the activities in the data set
activities = c("WALK","WALK_UP","WALK_DOWN","SIT","STAND","LAYING")
df = mutate(df,active=activities[activity])
df = select(df,1,82,3:81)
colnames(df) = titles
# clear enviornment from variables not needed anymore
rm(s_test, s_train, t_test, t_train, x_test, x_train, cols_inic, activities)
#Step 4: Appropriately labels the data set with descriptive variable names.
#replace with gsub the variable names with more descriptive names
titles = gsub("tBody","Time_Body_",titles,fixed=TRUE)
titles = gsub("fBody","Freq_Body_",titles,fixed=TRUE)
titles = gsub("gravity","Gravity",titles,fixed=TRUE)
titles = gsub("tGravity","Time_Gravity_",titles,fixed=TRUE)
titles = gsub("_Acc_","_Accel_",titles,titles, fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("__","_",titles,fixed=TRUE)
titles = gsub("...","_",titles,fixed=TRUE)
titles = gsub(".","_",titles,fixed=TRUE)
titles = gsub("mean__","mean",titles,fixed=TRUE)
titles = gsub("std__","std",titles,fixed=TRUE)
titles = gsub("meanFreq","mean_freq",titles,fixed=TRUE)
titles = gsub("freq__","freq",titles,fixed=TRUE)
print(titles)
#[1] "subject"                                "activity"                               "Time_Body_Acc_mean_X"
#[4] "Time_Body_Acc_mean_Y"                   "Time_Body_Acc_mean_Z"                   "Time_Body_Acc_std_X"
#[7] "Time_Body_Acc_std_Y"                    "Time_Body_Acc_std_Z"                    "Time_Gravity_Acc_mean_X"
#[10] "Time_Gravity_Acc_mean_Y"                "Time_Gravity_Acc_mean_Z"                "Time_Gravity_Acc_std_X"
#[13] "Time_Gravity_Acc_std_Y"                 "Time_Gravity_Acc_std_Z"                 "Time_Body_Acc_Jerk_mean_X"
#[16] "Time_Body_Acc_Jerk_mean_Y"              "Time_Body_Acc_Jerk_mean_Z"              "Time_Body_Acc_Jerk_std_X"
#[19] "Time_Body_Acc_Jerk_std_Y"               "Time_Body_Acc_Jerk_std_Z"               "Time_Body_Gyro_mean_X"
#[22] "Time_Body_Gyro_mean_Y"                  "Time_Body_Gyro_mean_Z"                  "Time_Body_Gyro_std_X"
#[25] "Time_Body_Gyro_std_Y"                   "Time_Body_Gyro_std_Z"                   "Time_Body_Gyro_Jerk_mean_X"
#[28] "Time_Body_Gyro_Jerk_mean_Y"             "Time_Body_Gyro_Jerk_mean_Z"             "Time_Body_Gyro_Jerk_std_X"
#[31] "Time_Body_Gyro_Jerk_std_Y"              "Time_Body_Gyro_Jerk_std_Z"              "Time_Body_Acc_Mag_mean"
#[34] "Time_Body_Acc_Mag_std"                  "Time_Gravity_Acc_Mag_mean"              "Time_Gravity_Acc_Mag_std"
#[37] "Time_Body_Acc_Jerk_Mag_mean"            "Time_Body_Acc_Jerk_Mag_std"             "Time_Body_Gyro_Mag_mean"
#[40] "Time_Body_Gyro_Mag_std"                 "Time_Body_Gyro_Jerk_Mag_mean"           "Time_Body_Gyro_Jerk_Mag_std"
#[43] "Freq_Body_Acc_mean_X"                   "Freq_Body_Acc_mean_Y"                   "Freq_Body_Acc_mean_Z"
#[46] "Freq_Body_Acc_std_X"                    "Freq_Body_Acc_std_Y"                    "Freq_Body_Acc_std_Z"
#[49] "Freq_Body_Acc_mean_freq_X"              "Freq_Body_Acc_mean_freq_Y"              "Freq_Body_Acc_mean_freq_Z"
#[52] "Freq_Body_Acc_Jerk_mean_X"              "Freq_Body_Acc_Jerk_mean_Y"              "Freq_Body_Acc_Jerk_mean_Z"
#[55] "Freq_Body_Acc_Jerk_std_X"               "Freq_Body_Acc_Jerk_std_Y"               "Freq_Body_Acc_Jerk_std_Z"
#[58] "Freq_Body_Acc_Jerk_mean_freq_X"         "Freq_Body_Acc_Jerk_mean_freq_Y"         "Freq_Body_Acc_Jerk_mean_freq_Z"
#[61] "Freq_Body_Gyro_mean_X"                  "Freq_Body_Gyro_mean_Y"                  "Freq_Body_Gyro_mean_Z"
#[64] "Freq_Body_Gyro_std_X"                   "Freq_Body_Gyro_std_Y"                   "Freq_Body_Gyro_std_Z"
#[67] "Freq_Body_Gyro_mean_freq_X"             "Freq_Body_Gyro_mean_freq_Y"             "Freq_Body_Gyro_mean_freq_Z"
#[70] "Freq_Body_Acc_Mag_mean"                 "Freq_Body_Acc_Mag_std"                  "Freq_Body_Acc_Mag_mean_freq"
#[73] "Freq_Body_Body_Acc_Jerk_Mag_mean"       "Freq_Body_Body_Acc_Jerk_Mag_std"        "Freq_Body_Body_Acc_Jerk_Mag_mean_freq"
#[76] "Freq_Body_Body_Gyro_Mag_mean"           "Freq_Body_Body_Gyro_Mag_std"            "Freq_Body_Body_Gyro_Mag_mean_freq"
#[79] "Freq_Body_Body_Gyro_Jerk_Mag_mean"      "Freq_Body_Body_Gyro_Jerk_Mag_std"       "Freq_Body_Body_Gyro_Jerk_Mag_mean_freq"
#Step 5: 5.From the data set in step 4, creates a second, independent tidy data set
#with the average of each variable for each activity and each subject.
gr_act_subj <- group_by(df, activity, subject)
mean_act_subj <- summarise_all(gr_act_subj,"mean")
View(mean_act_subj)
# clear enviornment from variables not needed anymore
rm(gr_act_subj, titles)
titles2 = colnames(mean_act_subj)
View(titles2)
View(titles)
write.table(mean_act_subj,"step5_summary.txt",row.name = FALSE)
library(dplyr)
setwd("D:/git_repo/Get-Clear-Data-Assignment")
#Step 0. Read Raw data into Tables
#read the colnames of the merged data frama (df)
titles <- tbl_df(read.table("features.txt", colClasses = c("character"), stringsAsFactors = FALSE ))
titles<- c("subject","activity",as.array(titles$V2))
#fix the invalid varaible names
titles = make.names(titles, unique = TRUE, allow_ = TRUE)
x_test<-tbl_df(read.table("X_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_test<-tbl_df(read.table("subject_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_test<-tbl_df(read.table("y_test.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_test = bind_cols(s_test, t_test, x_test)
colnames(x_test) = titles
x_train<-tbl_df(read.table("x_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
s_train<-tbl_df(read.table("subject_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
t_train<-tbl_df(read.table("y_train.txt",colClasses = c("numeric"), stringsAsFactors = FALSE))
x_train = bind_cols(s_train, t_train, x_train)
colnames(x_train) = titles
#Step 1: Merges the training and the test sets to create one data set.
print(paste("dim x_test/x_train: ",dim(x_test)[1],dim(x_test)[2], "/" ,dim(x_train)[1],dim(x_train)[2]))
# [1] "dim x_test/x_train:  2947 563 / 7352 563"
df = bind_rows(x_test,x_train)
print(paste("dim of the merged dataframe (df): ",dim(df)[1],dim(df)[2]))
# [1] "dim of the merged dataframe (df):  10299 563"
#Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.
#read the colnames of the merged data frama (df)
# df must contain only the cols with mean and std
titles = colnames(df)
cols_inic = df[,1:2]
df <- df[(grepl("mean",titles) | grepl("std",titles))]
df <- bind_cols(cols_inic, df)
print(paste("dim of the dataframe whith only means and stds: ",dim(df)[1], dim(df)[2]))
titles = colnames(df)
print(titles)
#Step 3: Uses descriptive activity names to name the activities in the data set
activities = c("WALK","WALK_UP","WALK_DOWN","SIT","STAND","LAYING")
df = mutate(df,active=activities[activity])
df = select(df,1,82,3:81)
colnames(df) = titles
# clear enviornment from variables not needed anymore
rm(s_test, s_train, t_test, t_train, x_test, x_train, cols_inic, activities)
#Step 4: Appropriately labels the data set with descriptive variable names.
#replace with gsub the variable names with more descriptive names
titles = gsub("tBody","Time_Body_",titles,fixed=TRUE)
titles = gsub("fBody","Freq_Body_",titles,fixed=TRUE)
titles = gsub("gravity","Gravity",titles,fixed=TRUE)
titles = gsub("tGravity","Time_Gravity_",titles,fixed=TRUE)
titles = gsub("_Acc_","_Accel_",titles,titles, fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("angle","Angle",titles,fixed=TRUE)
titles = gsub("Jerk","_Jerk",titles,fixed=TRUE)
titles = gsub("Mag","_Mag",titles,fixed=TRUE)
titles = gsub("_meanFreq","_mean_Freq",titles,fixed=TRUE)
titles = gsub("Body_Body","Body_Body_",titles,fixed=TRUE)
titles = gsub("__","_",titles,fixed=TRUE)
titles = gsub("...","_",titles,fixed=TRUE)
titles = gsub(".","_",titles,fixed=TRUE)
titles = gsub("mean__","mean",titles,fixed=TRUE)
titles = gsub("std__","std",titles,fixed=TRUE)
titles = gsub("meanFreq","mean_freq",titles,fixed=TRUE)
titles = gsub("freq__","freq",titles,fixed=TRUE)
print(titles)
#[1] "subject"                                "activity"                               "Time_Body_Acc_mean_X"
#[4] "Time_Body_Acc_mean_Y"                   "Time_Body_Acc_mean_Z"                   "Time_Body_Acc_std_X"
#[7] "Time_Body_Acc_std_Y"                    "Time_Body_Acc_std_Z"                    "Time_Gravity_Acc_mean_X"
#[10] "Time_Gravity_Acc_mean_Y"                "Time_Gravity_Acc_mean_Z"                "Time_Gravity_Acc_std_X"
#[13] "Time_Gravity_Acc_std_Y"                 "Time_Gravity_Acc_std_Z"                 "Time_Body_Acc_Jerk_mean_X"
#[16] "Time_Body_Acc_Jerk_mean_Y"              "Time_Body_Acc_Jerk_mean_Z"              "Time_Body_Acc_Jerk_std_X"
#[19] "Time_Body_Acc_Jerk_std_Y"               "Time_Body_Acc_Jerk_std_Z"               "Time_Body_Gyro_mean_X"
#[22] "Time_Body_Gyro_mean_Y"                  "Time_Body_Gyro_mean_Z"                  "Time_Body_Gyro_std_X"
#[25] "Time_Body_Gyro_std_Y"                   "Time_Body_Gyro_std_Z"                   "Time_Body_Gyro_Jerk_mean_X"
#[28] "Time_Body_Gyro_Jerk_mean_Y"             "Time_Body_Gyro_Jerk_mean_Z"             "Time_Body_Gyro_Jerk_std_X"
#[31] "Time_Body_Gyro_Jerk_std_Y"              "Time_Body_Gyro_Jerk_std_Z"              "Time_Body_Acc_Mag_mean"
#[34] "Time_Body_Acc_Mag_std"                  "Time_Gravity_Acc_Mag_mean"              "Time_Gravity_Acc_Mag_std"
#[37] "Time_Body_Acc_Jerk_Mag_mean"            "Time_Body_Acc_Jerk_Mag_std"             "Time_Body_Gyro_Mag_mean"
#[40] "Time_Body_Gyro_Mag_std"                 "Time_Body_Gyro_Jerk_Mag_mean"           "Time_Body_Gyro_Jerk_Mag_std"
#[43] "Freq_Body_Acc_mean_X"                   "Freq_Body_Acc_mean_Y"                   "Freq_Body_Acc_mean_Z"
#[46] "Freq_Body_Acc_std_X"                    "Freq_Body_Acc_std_Y"                    "Freq_Body_Acc_std_Z"
#[49] "Freq_Body_Acc_mean_freq_X"              "Freq_Body_Acc_mean_freq_Y"              "Freq_Body_Acc_mean_freq_Z"
#[52] "Freq_Body_Acc_Jerk_mean_X"              "Freq_Body_Acc_Jerk_mean_Y"              "Freq_Body_Acc_Jerk_mean_Z"
#[55] "Freq_Body_Acc_Jerk_std_X"               "Freq_Body_Acc_Jerk_std_Y"               "Freq_Body_Acc_Jerk_std_Z"
#[58] "Freq_Body_Acc_Jerk_mean_freq_X"         "Freq_Body_Acc_Jerk_mean_freq_Y"         "Freq_Body_Acc_Jerk_mean_freq_Z"
#[61] "Freq_Body_Gyro_mean_X"                  "Freq_Body_Gyro_mean_Y"                  "Freq_Body_Gyro_mean_Z"
#[64] "Freq_Body_Gyro_std_X"                   "Freq_Body_Gyro_std_Y"                   "Freq_Body_Gyro_std_Z"
#[67] "Freq_Body_Gyro_mean_freq_X"             "Freq_Body_Gyro_mean_freq_Y"             "Freq_Body_Gyro_mean_freq_Z"
#[70] "Freq_Body_Acc_Mag_mean"                 "Freq_Body_Acc_Mag_std"                  "Freq_Body_Acc_Mag_mean_freq"
#[73] "Freq_Body_Body_Acc_Jerk_Mag_mean"       "Freq_Body_Body_Acc_Jerk_Mag_std"        "Freq_Body_Body_Acc_Jerk_Mag_mean_freq"
#[76] "Freq_Body_Body_Gyro_Mag_mean"           "Freq_Body_Body_Gyro_Mag_std"            "Freq_Body_Body_Gyro_Mag_mean_freq"
#[79] "Freq_Body_Body_Gyro_Jerk_Mag_mean"      "Freq_Body_Body_Gyro_Jerk_Mag_std"       "Freq_Body_Body_Gyro_Jerk_Mag_mean_freq"
#Step 5: 5.From the data set in step 4, creates a second, independent tidy data set
#with the average of each variable for each activity and each subject.
colnames(df) <- titles
gr_act_subj <- group_by(df, activity, subject)
mean_act_subj <- summarise_all(gr_act_subj,"mean")
View(mean_act_subj)
write.table(mean_act_subj,"step5_summary.txt",row.name = FALSE)
View(titles)
dir_work <- "D:/git_repo/Get-Clear-Data-Assignment"
setwd("D:/git_repo/Get-Clear-Data-Assignment")
source("run_analysis.R")
getwd()
source("run_analysis.R")
source("run_analysis.R")
setwd("D:/git_repo/Get-Clear-Data-Assignment")
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
setwd("D:/git_repo/Get-Clear-Data-Assignment")
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
ls()
dir()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
setwd("D:/git_repo/Get-Clear-Data-Assignment")
source("run_analysis.R")
x = run_analysis()
x
df_step1 <- run_analysis()
rm(x)
source("run_analysis.R")
x = run_analysis()
View(x)
source("run_analysis.R")
x = run_analysis()
rm(x)
rm(df_step1)
source("run_analysis.R")
x1 = run_analysis()
source("run_analysis.R")
x2 = run_analysis()
source("run_analysis.R")
x2 = run_analysis()
source("run_analysis.R")
x3 = run_analysis()
view(x3)
View(x3)
rm(x2)
rm(x3)
